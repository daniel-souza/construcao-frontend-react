{"ast":null,"code":"var _jsxFileName = \"/home/dsouza/dev/gran/aula4/aula5/gran-frontend/app-rotas/src/components/ButtonHookLifeCycle.jsx\",\n  _s = $RefreshSig$();\nimport { memo, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limit = 10;\nlet mounted = false;\nconst darkColor = 'bg-red-800 text-blue-200 hover:bg-red-600';\nconst lightColor = 'bg-blue-800 text-red-200 hover:bg-blue-600';\nfunction ButtonHookLifeCycle({\n  darkMode\n}) {\n  _s();\n  // Similar ao construtor (inicialização da classe)\n  const [count, setCount] = useState(0);\n\n  // component did update\n  useEffect(() => {\n    if (!mounted) return;\n    console.log('componentDidUpdate (ButtonHookLifeCycle)');\n    document.title = `Você clicou ${count} vezes`;\n  }, [count]);\n\n  // component did mount / will unmount\n  useEffect(() => {\n    console.log('componentDidMount (ButtonHookLifeCycle)');\n    document.title = `Componente ButtonHookLifeCycle montado!`;\n    mounted = true;\n    return () => {\n      console.log('componentWillUnmount (ButtonHookLifeCycle)');\n      document.title = `Componente ButtonHookLifeCycle será desmontado!`;\n      alert('O componente ButtonHookLifeCycle será desmontado');\n    };\n  }, []);\n  console.log('render (ButtonHookLifeCycle)');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-10 flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `p-5 ${darkMode ? darkColor : lightColor} rounded-md text-2xl font-bold`,\n      onClick: () => count < limit && setCount(count + 1),\n      children: [\"Cliques: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ButtonHookLifeCycle, \"MD2HH0EjGUMCoeKoB+fX0xWGIOA=\");\n_c = ButtonHookLifeCycle;\nfunction areCachedPropsEqual(prevProps, nextProps) {\n  console.log('shouldComponentUpdate (ButtonHookLifeCycle)');\n  return prevProps.darkMode === nextProps.darkMode;\n}\nexport default _c2 = /*#__PURE__*/memo(ButtonHookLifeCycle, areCachedPropsEqual);\nvar _c, _c2;\n$RefreshReg$(_c, \"ButtonHookLifeCycle\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useEffect","useState","jsxDEV","_jsxDEV","limit","mounted","darkColor","lightColor","ButtonHookLifeCycle","darkMode","_s","count","setCount","console","log","document","title","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","areCachedPropsEqual","prevProps","nextProps","_c2","$RefreshReg$"],"sources":["/home/dsouza/dev/gran/aula4/aula5/gran-frontend/app-rotas/src/components/ButtonHookLifeCycle.jsx"],"sourcesContent":["import { memo, useEffect, useState } from \"react\";\n\nconst limit = 10;\nlet mounted = false;\nconst darkColor = 'bg-red-800 text-blue-200 hover:bg-red-600';\nconst lightColor = 'bg-blue-800 text-red-200 hover:bg-blue-600';\n\nfunction ButtonHookLifeCycle({ darkMode }) {\n\n  // Similar ao construtor (inicialização da classe)\n  const [count, setCount] = useState(0);\n\n  // component did update\n  useEffect(() => {\n    if(!mounted) return;\n    console.log('componentDidUpdate (ButtonHookLifeCycle)');\n    document.title = `Você clicou ${count} vezes`;\n  }, [count]);\n\n  // component did mount / will unmount\n  useEffect(() => {\n      console.log('componentDidMount (ButtonHookLifeCycle)');\n      document.title = `Componente ButtonHookLifeCycle montado!`;\n      mounted = true;\n    return () => {\n      console.log('componentWillUnmount (ButtonHookLifeCycle)');\n      document.title = `Componente ButtonHookLifeCycle será desmontado!`;\n      alert('O componente ButtonHookLifeCycle será desmontado');\n    }\n  }, []);\n\n  console.log('render (ButtonHookLifeCycle)');\n  return (\n    <div className='m-10 flex items-center justify-center'>\n      <button  \n      className={`p-5 ${darkMode ? darkColor: lightColor } rounded-md text-2xl font-bold`} \n              onClick={() => count < limit && setCount(count+1)}>\n        Cliques: {count}\n      </button>\n    </div>\n  )\n}\n\nfunction areCachedPropsEqual(prevProps, nextProps) {\n  console.log('shouldComponentUpdate (ButtonHookLifeCycle)');\n  return prevProps.darkMode === nextProps.darkMode;\n}\n\nexport default memo(ButtonHookLifeCycle, areCachedPropsEqual);"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAG,EAAE;AAChB,IAAIC,OAAO,GAAG,KAAK;AACnB,MAAMC,SAAS,GAAG,2CAA2C;AAC7D,MAAMC,UAAU,GAAG,4CAA4C;AAE/D,SAASC,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAEzC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACAD,SAAS,CAAC,MAAM;IACd,IAAG,CAACK,OAAO,EAAE;IACbQ,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACvDC,QAAQ,CAACC,KAAK,GAAI,eAAcL,KAAM,QAAO;EAC/C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACAX,SAAS,CAAC,MAAM;IACZa,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACtDC,QAAQ,CAACC,KAAK,GAAI,yCAAwC;IAC1DX,OAAO,GAAG,IAAI;IAChB,OAAO,MAAM;MACXQ,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MACzDC,QAAQ,CAACC,KAAK,GAAI,iDAAgD;MAClEC,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC3C,oBACEX,OAAA;IAAKe,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eACpDhB,OAAA;MACAe,SAAS,EAAG,OAAMT,QAAQ,GAAGH,SAAS,GAAEC,UAAY,gCAAgC;MAC5Ea,OAAO,EAAEA,CAAA,KAAMT,KAAK,GAAGP,KAAK,IAAIQ,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAE;MAAAQ,QAAA,GAAC,WAChD,EAACR,KAAK;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACd,EAAA,CAlCQF,mBAAmB;AAAAiB,EAAA,GAAnBjB,mBAAmB;AAoC5B,SAASkB,mBAAmBA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACjDf,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;EAC1D,OAAOa,SAAS,CAAClB,QAAQ,KAAKmB,SAAS,CAACnB,QAAQ;AAClD;AAEA,eAAAoB,GAAA,gBAAe9B,IAAI,CAACS,mBAAmB,EAAEkB,mBAAmB,CAAC;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}